{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Water Systems Design A WebBook to Accompany CE 3372 at TTU by Theodore G. Cleveland This webook is a textbook-like document to accompany the class; it is simultaneously a textbook, and a content website. Description Theory and application of hydraulics, use of predictive tools such as design guidelines, charts and computer programs, for the analysis and design of water distribution and stormwater/wastewater collection and pumping systems. Preparation of reports and designs and presentations are additional components of this course. University Catalog Description CE 3372. Water Systems Design (3:3:0). Prerequesites: CE 3305, 3354. Hydraulic analysis and design of municipal water distribution, stormwater collection, and wastewater collection systems. Oral and written presentations. (Communications Intensive) Learning Activities Read, synthesize, and communicate ideas presented in current and historical technical literature. Perform flow and transport computation in simplistic topologies using JupyterLab (ENGR 1330) as needed. Perform flow and transport computation in realistic geometries using EPA-NET or similar professional tools for water distribution systems. Perform flow and transport computation in realistic geometries using SWMM 5.0 or similar professional tools for stormwater and wastewater collection systems. Size and select engineering materials (pipes, pumps, valves, etc.) for use in drinking water (water distribution), stormwater , and wastewater systems. Prepare preliminary engineering design reports for a drinking water distribution system, a stormwater collection system, and a wastewater collection system. Deliver design presentation(s) on selected preliminary engineering design(s). Computational Requirements WCOE has adopted JupyterLab as the computing environment within ENGR 1330; in the spirit of downstream application of Computational Thinking/Data Science, components of this course are being transitioned to that environment. A shared JupyterLab computing environment (Python and R enabled) is also provided through a navigation bar link. Network simulations will be conducted using EPANET 2.2 and SWMM 5.0 which are available for free from the US EPA website, or you can use the EPANET in a Box and SWMM in a Box shared environments.","title":"Home"},{"location":"#water-systems-design","text":"","title":" Water Systems Design "},{"location":"#a-webbook-to-accompany-ce-3372-at-ttu","text":"by Theodore G. Cleveland This webook is a textbook-like document to accompany the class; it is simultaneously a textbook, and a content website.","title":"A WebBook to Accompany CE 3372 at TTU "},{"location":"#description","text":"Theory and application of hydraulics, use of predictive tools such as design guidelines, charts and computer programs, for the analysis and design of water distribution and stormwater/wastewater collection and pumping systems. Preparation of reports and designs and presentations are additional components of this course.","title":"Description"},{"location":"#university-catalog-description","text":"CE 3372. Water Systems Design (3:3:0). Prerequesites: CE 3305, 3354. Hydraulic analysis and design of municipal water distribution, stormwater collection, and wastewater collection systems. Oral and written presentations. (Communications Intensive)","title":"University Catalog Description"},{"location":"#learning-activities","text":"Read, synthesize, and communicate ideas presented in current and historical technical literature. Perform flow and transport computation in simplistic topologies using JupyterLab (ENGR 1330) as needed. Perform flow and transport computation in realistic geometries using EPA-NET or similar professional tools for water distribution systems. Perform flow and transport computation in realistic geometries using SWMM 5.0 or similar professional tools for stormwater and wastewater collection systems. Size and select engineering materials (pipes, pumps, valves, etc.) for use in drinking water (water distribution), stormwater , and wastewater systems. Prepare preliminary engineering design reports for a drinking water distribution system, a stormwater collection system, and a wastewater collection system. Deliver design presentation(s) on selected preliminary engineering design(s).","title":"Learning Activities"},{"location":"#computational-requirements","text":"WCOE has adopted JupyterLab as the computing environment within ENGR 1330; in the spirit of downstream application of Computational Thinking/Data Science, components of this course are being transitioned to that environment. A shared JupyterLab computing environment (Python and R enabled) is also provided through a navigation bar link. Network simulations will be conducted using EPANET 2.2 and SWMM 5.0 which are available for free from the US EPA website, or you can use the EPANET in a Box and SWMM in a Box shared environments.","title":"Computational Requirements"},{"location":"lesson1/lesson1/","text":"CE 3372 Water Systems Design Lesson 1. Introduction The title of the course is water systems design. The catalog description is: CE 3372. Water Systems Design (3:3:0).Prerequesite: CE 33051, 33542.Hydraulic analysis and design of municipal water distribution, stormwater collection, and wastewater collection systems. Oral and written presentations. (Writing Intensive) The general scope of the course is: Examination of design guidance documents for drinking water distribution systems, a review of pipeline hydraulics, demand estimation, then a design project related to a drinking water distribution system. The computer program EPANET is presented to provide a tool for the hydraulic modeling component of drinking water system design. Examination of design guidance for stormwater collection systems, presents a review of open channel hydraulics (as related to storm sewers), capacity (hydrology) estimation, then a design project related to a stormwater collection system. The computer program SWMM 5 is presented to provide a tool for the hydrologic/hydraulic modeling component of the stormwater collection system design. Examination of design guidance for wastewater collection systems, then a design project related to a stormwater collection system. The graded components of the course are: Quizzes (administered on a learning management system); individual activity Exercises (collected on a learning management system); group activity Exams (administered on a learning management system); individual activity A design report (Three parts; collected on a learning management system); group activity A design presentation (administered on a learning management system); group activity Water Systems Definition(s) The course title is Water Systems Design, so a natural question is what is meant by a water system? In this course it refers to a water distribution system that conveys raw or treated water to customers, a storm water collection system that conveys storm water away from infrastructure to reduce flooding damages and activities of daily life inconvenience,and wastewater collection systems that convey wastewater to treatment facilities for eventual release of the water back into the environment (or intentional reuse). Water systems can be classified into three main categories (Chin, 2006; Mays, 2011): Water-control systems \u2013 to control the spatial and temporal distribution ofsurface runoff from rainfall events (drainage engineering). They can also servea use role if the captured rainwater is used later on for water supply (rainwaterharvesting). Water-use system \u2013 to support human habitation and include water-treatmentsystems, water-distribution systems, wastewater-collection systems, and wastewater-treatment systems. Environmental restoration system \u2013 to manage spatial and temporal distributionof water (quality and quantity) in support of non-human habitation. Water Control Systems Spatial and temporal distribution of surface runoff from rainfall events (drainage engineering) Flood control Storm water harvesting Capacity is based on AREA served Hydrologicaly dominated designs Water Use Systems Spatial and temporal distribution in support of human habitation Water supply/treatment/distribution Waste water collection/treatment/discharge Capacity is based on POPULATION served Hydraulically dominated designs Environmental Restoration Systems Systems to manage spatial and temporal distribution in support of non-human habitation Create \u201cdesirable\u201d conditions \u201cDesirable\u201d <= Policy <= Value Judgment Water System Photos This brief photo essay is adapted from \u201cHistorical Urban Water Systems\u201d by Dr. Robert Pitt, Department of Civil and Environmental Engineering, University of Alabama, Tuscaloosa, AL 35487 As we proceed through the tour, using the general definitions above, decide whether the picture represents a water control, water use, or environmental restoration system. Readings Introduction to Water Resources Engineering Pages 1-33 from Wurbs,R.A., and James, W.P. (2002) Water Resources Engineering, Prentice Hall. https://3.137.111.182/ce-3372-webbook/readings/Wurbs1-33.pdf Introduction to Water Resources Engineeirng Pages 1-11 from Mays, L.W. (2011) Water Resources Engineering, J. Wiley and Sons. https://3.137.111.182/ce-3372-webbook/readings/Mays1-11.pdf Introduction to Water Resources Engineering Pages 1-8 from Chin, D. A. (2006) Water-Resources Engineering, Pearson-Prentice Hall. https://3.137.111.182/ce-3372-webbook/readings/Chin1-8.pdf","title":"Lesson 1 Introduction"},{"location":"lesson1/lesson1/#ce-3372-water-systems-design","text":"","title":"CE 3372 Water Systems Design"},{"location":"lesson1/lesson1/#lesson-1-introduction","text":"The title of the course is water systems design. The catalog description is: CE 3372. Water Systems Design (3:3:0).Prerequesite: CE 33051, 33542.Hydraulic analysis and design of municipal water distribution, stormwater collection, and wastewater collection systems. Oral and written presentations. (Writing Intensive) The general scope of the course is: Examination of design guidance documents for drinking water distribution systems, a review of pipeline hydraulics, demand estimation, then a design project related to a drinking water distribution system. The computer program EPANET is presented to provide a tool for the hydraulic modeling component of drinking water system design. Examination of design guidance for stormwater collection systems, presents a review of open channel hydraulics (as related to storm sewers), capacity (hydrology) estimation, then a design project related to a stormwater collection system. The computer program SWMM 5 is presented to provide a tool for the hydrologic/hydraulic modeling component of the stormwater collection system design. Examination of design guidance for wastewater collection systems, then a design project related to a stormwater collection system. The graded components of the course are: Quizzes (administered on a learning management system); individual activity Exercises (collected on a learning management system); group activity Exams (administered on a learning management system); individual activity A design report (Three parts; collected on a learning management system); group activity A design presentation (administered on a learning management system); group activity","title":"Lesson 1. Introduction"},{"location":"lesson1/lesson1/#water-systems-definitions","text":"The course title is Water Systems Design, so a natural question is what is meant by a water system? In this course it refers to a water distribution system that conveys raw or treated water to customers, a storm water collection system that conveys storm water away from infrastructure to reduce flooding damages and activities of daily life inconvenience,and wastewater collection systems that convey wastewater to treatment facilities for eventual release of the water back into the environment (or intentional reuse). Water systems can be classified into three main categories (Chin, 2006; Mays, 2011): Water-control systems \u2013 to control the spatial and temporal distribution ofsurface runoff from rainfall events (drainage engineering). They can also servea use role if the captured rainwater is used later on for water supply (rainwaterharvesting). Water-use system \u2013 to support human habitation and include water-treatmentsystems, water-distribution systems, wastewater-collection systems, and wastewater-treatment systems. Environmental restoration system \u2013 to manage spatial and temporal distributionof water (quality and quantity) in support of non-human habitation.","title":"Water Systems Definition(s)"},{"location":"lesson1/lesson1/#water-control-systems","text":"Spatial and temporal distribution of surface runoff from rainfall events (drainage engineering) Flood control Storm water harvesting Capacity is based on AREA served Hydrologicaly dominated designs","title":"Water Control Systems"},{"location":"lesson1/lesson1/#water-use-systems","text":"Spatial and temporal distribution in support of human habitation Water supply/treatment/distribution Waste water collection/treatment/discharge Capacity is based on POPULATION served Hydraulically dominated designs","title":"Water Use Systems"},{"location":"lesson1/lesson1/#environmental-restoration-systems","text":"Systems to manage spatial and temporal distribution in support of non-human habitation Create \u201cdesirable\u201d conditions \u201cDesirable\u201d <= Policy <= Value Judgment","title":"Environmental Restoration Systems"},{"location":"lesson1/lesson1/#water-system-photos","text":"This brief photo essay is adapted from \u201cHistorical Urban Water Systems\u201d by Dr. Robert Pitt, Department of Civil and Environmental Engineering, University of Alabama, Tuscaloosa, AL 35487 As we proceed through the tour, using the general definitions above, decide whether the picture represents a water control, water use, or environmental restoration system.","title":"Water System Photos"},{"location":"lesson1/lesson1/#readings","text":"Introduction to Water Resources Engineering Pages 1-33 from Wurbs,R.A., and James, W.P. (2002) Water Resources Engineering, Prentice Hall. https://3.137.111.182/ce-3372-webbook/readings/Wurbs1-33.pdf Introduction to Water Resources Engineeirng Pages 1-11 from Mays, L.W. (2011) Water Resources Engineering, J. Wiley and Sons. https://3.137.111.182/ce-3372-webbook/readings/Mays1-11.pdf Introduction to Water Resources Engineering Pages 1-8 from Chin, D. A. (2006) Water-Resources Engineering, Pearson-Prentice Hall. https://3.137.111.182/ce-3372-webbook/readings/Chin1-8.pdf","title":"Readings"},{"location":"lesson4/lesson4/","text":"CE 3372 Water Systems Design Lesson 4. Pipeline Head Loss Models Water moves from higher to lower energy Path of least resistance Head is energy per unit weight of a fluid Pumps are used to add energy to move water to a higher elevation or over a barrier Gravity flow: Change in elevation provides the required energy Pressure flow: Change in pressure provides the required energy Flowing water encounters friction/resistance; hence there is loss of energy along a flow path. The mean section velocity is related to cross sectional flow area and volumetric discharge as: \\bar{V} = \\frac{Q}{A} Continunity at Junctions --- Computing Discharge from Specified Head Loss Computational Thinking/Data Science Approach (ENGR 1330) CT/DS Approach * State the programming problem * Known (Inputs) * Unknown (Outputs) * Governing Equation(s) * Test the tool State the programming problem Build a tool that takes inputs for the Jain equation and produces an estimate of discharge Build an interface (notebook) that accepts the inputs, calls the function, and returns the computed discharge Known (Inputs) Engineer will specify: * Diameter, D; * Length of pipe, L; * Roughness height, e; * Viscosity, \\nu ; * Gravitational acceleration constant, g; * Head loss Unknown (Outputs) The tool will compute and report Discharge, Q. Governing Equation(s) A compact form of the equation to be evaluated is \\begin{equation} Q=-0.965 D^2 \\sqrt{\\frac{gDh_f}{L}}ln( \\frac{k_s}{3.7D}+\\frac{1.78\\nu}{D\\sqrt{\\frac{gDh_f}{L}}} ) \\end{equation} Test the tool #computation engine # import built in functions for log, sqrt from math import log,sqrt,log # Define the prototype function def jainQ(pipe_diameter,pipe_length,roughness,viscosity,grabity,head_loss): egl_slope = head_loss/pipe_length t1 = sqrt(grabity*pipe_diameter*egl_slope) t2 = roughness/(3.7*pipe_diameter) t3 = 1.78*viscosity jainQ = (-0.965*pipe_diameter**2)*t1*log(t2 + t3/(pipe_diameter*t1)) return jainQ # interface engine # Get pipe diameter, use a simple error trap yes=0 while yes == 0: xnow = input(\"Enter Pipe Diameter \\n\") try: pipe_diameter = float(xnow) yes =1 except: print (\"Value should be numeric, try again \\n\") # Get pipe length, use a simple error trap yes=0 while yes == 0: xnow = input(\"Enter Pipe Length \\n\") try: pipe_length = float(xnow) yes =1 except: print (\"Value should be numeric, try again \\n\") # Get roughness, use a simple error trap yes=0 while yes == 0: xnow = input(\"Enter Pipe Roughness Height \\n\") try: roughness = float(xnow) yes =1 except: print (\"Value should be numeric, try again \\n\") # Get viscosity, use a simple error trap yes=0 while yes == 0: xnow = input(\"Enter liquid viscosity \\n\") try: viscosity = float(xnow) yes =1 except: print (\"Value should be numeric, try again \\n\") # Get grabity, use a simple error trap yes=0 while yes == 0: xnow = input(\"Enter gravitational acceleration constant (unit system appropriate) \\n\") try: grabity = float(xnow) yes =1 except: print (\"Value should be numeric, try again \\n\") # Get head loss, use a simple error trap yes=0 while yes == 0: xnow = input(\"Enter head loss \\n\") try: head_loss = float(xnow) yes =1 except: print (\"Value should be numeric, try again \\n\") Enter Pipe Diameter 2 Enter Pipe Length 10560 Enter Pipe Roughness Height 8.5e-5 Enter liquid viscosity 1e-5 Enter gravitational acceleration constant (unit system appropriate) 32.2 Enter head loss 40 # now perform computation and construct output discharge = jainQ(pipe_diameter,pipe_length,roughness,viscosity,grabity,head_loss) # Echo inputs, and outputs print (\"Pipe Diameter : \", pipe_diameter) print (\"Pipe Length : \", pipe_length) print (\"Pipe Roughness Height : \", roughness) print (\"Liquid Viscosity : \", viscosity) print (\"Gravitational acceleration constant : \",grabity) print (\"Head loss : \",head_loss) print (\"Discharge : \",discharge) Pipe Diameter : 2.0 Pipe Length : 10560.0 Pipe Roughness Height : 8.5e-05 Liquid Viscosity : 1e-05 Gravitational acceleration constant : 32.2 Head loss : 40.0 Discharge : 19.8861362976099 Refine the Tool for Generalization The refinement step would wrap the three parts above into a single function/notebook for simple use/reuse. If we save all three parts to a single file, we can access the script as we wish (using a JupyterLab magic function trick below. The run command is obvious, but the -i means run interactive, and we supply the script name) %run -i getQfromH.py Enter Pipe Diameter 2 Enter Pipe Length 10560 Enter Pipe Roughness Height 8.5e-5 Enter liquid viscosity 1e-5 Enter gravitational acceleration constant (unit system appropriate) 32.2 Enter head loss 40 Pipe Diameter : 2.0 Pipe Length : 10560.0 Pipe Roughness Height : 8.5e-05 Liquid Viscosity : 1e-05 Gravitational acceleration constant : 32.2 Head loss : 40.0 Discharge : 19.8861362976099 Lastly, we can put the script onto a server and access via a web interface.","title":"Lesson 4 Pipeline Head Loss"},{"location":"lesson4/lesson4/#ce-3372-water-systems-design","text":"","title":"CE 3372 Water Systems Design"},{"location":"lesson4/lesson4/#lesson-4-pipeline-head-loss-models","text":"Water moves from higher to lower energy Path of least resistance Head is energy per unit weight of a fluid Pumps are used to add energy to move water to a higher elevation or over a barrier Gravity flow: Change in elevation provides the required energy Pressure flow: Change in pressure provides the required energy Flowing water encounters friction/resistance; hence there is loss of energy along a flow path. The mean section velocity is related to cross sectional flow area and volumetric discharge as: \\bar{V} = \\frac{Q}{A}","title":"Lesson 4. Pipeline Head Loss Models"},{"location":"lesson4/lesson4/#continunity-at-junctions","text":"","title":"Continunity at Junctions"},{"location":"lesson4/lesson4/#-","text":"","title":"---"},{"location":"lesson4/lesson4/#computing-discharge-from-specified-head-loss","text":"","title":"Computing Discharge from Specified Head Loss"},{"location":"lesson4/lesson4/#computational-thinkingdata-science-approach-engr-1330","text":"CT/DS Approach * State the programming problem * Known (Inputs) * Unknown (Outputs) * Governing Equation(s) * Test the tool","title":"Computational Thinking/Data Science Approach (ENGR 1330)"},{"location":"lesson4/lesson4/#state-the-programming-problem","text":"Build a tool that takes inputs for the Jain equation and produces an estimate of discharge Build an interface (notebook) that accepts the inputs, calls the function, and returns the computed discharge","title":"State the programming problem"},{"location":"lesson4/lesson4/#known-inputs","text":"Engineer will specify: * Diameter, D; * Length of pipe, L; * Roughness height, e; * Viscosity, \\nu ; * Gravitational acceleration constant, g; * Head loss","title":"Known (Inputs)"},{"location":"lesson4/lesson4/#unknown-outputs","text":"The tool will compute and report Discharge, Q.","title":"Unknown (Outputs)"},{"location":"lesson4/lesson4/#governing-equations","text":"A compact form of the equation to be evaluated is \\begin{equation} Q=-0.965 D^2 \\sqrt{\\frac{gDh_f}{L}}ln( \\frac{k_s}{3.7D}+\\frac{1.78\\nu}{D\\sqrt{\\frac{gDh_f}{L}}} ) \\end{equation}","title":"Governing Equation(s)"},{"location":"lesson4/lesson4/#test-the-tool","text":"#computation engine # import built in functions for log, sqrt from math import log,sqrt,log # Define the prototype function def jainQ(pipe_diameter,pipe_length,roughness,viscosity,grabity,head_loss): egl_slope = head_loss/pipe_length t1 = sqrt(grabity*pipe_diameter*egl_slope) t2 = roughness/(3.7*pipe_diameter) t3 = 1.78*viscosity jainQ = (-0.965*pipe_diameter**2)*t1*log(t2 + t3/(pipe_diameter*t1)) return jainQ # interface engine # Get pipe diameter, use a simple error trap yes=0 while yes == 0: xnow = input(\"Enter Pipe Diameter \\n\") try: pipe_diameter = float(xnow) yes =1 except: print (\"Value should be numeric, try again \\n\") # Get pipe length, use a simple error trap yes=0 while yes == 0: xnow = input(\"Enter Pipe Length \\n\") try: pipe_length = float(xnow) yes =1 except: print (\"Value should be numeric, try again \\n\") # Get roughness, use a simple error trap yes=0 while yes == 0: xnow = input(\"Enter Pipe Roughness Height \\n\") try: roughness = float(xnow) yes =1 except: print (\"Value should be numeric, try again \\n\") # Get viscosity, use a simple error trap yes=0 while yes == 0: xnow = input(\"Enter liquid viscosity \\n\") try: viscosity = float(xnow) yes =1 except: print (\"Value should be numeric, try again \\n\") # Get grabity, use a simple error trap yes=0 while yes == 0: xnow = input(\"Enter gravitational acceleration constant (unit system appropriate) \\n\") try: grabity = float(xnow) yes =1 except: print (\"Value should be numeric, try again \\n\") # Get head loss, use a simple error trap yes=0 while yes == 0: xnow = input(\"Enter head loss \\n\") try: head_loss = float(xnow) yes =1 except: print (\"Value should be numeric, try again \\n\") Enter Pipe Diameter 2 Enter Pipe Length 10560 Enter Pipe Roughness Height 8.5e-5 Enter liquid viscosity 1e-5 Enter gravitational acceleration constant (unit system appropriate) 32.2 Enter head loss 40 # now perform computation and construct output discharge = jainQ(pipe_diameter,pipe_length,roughness,viscosity,grabity,head_loss) # Echo inputs, and outputs print (\"Pipe Diameter : \", pipe_diameter) print (\"Pipe Length : \", pipe_length) print (\"Pipe Roughness Height : \", roughness) print (\"Liquid Viscosity : \", viscosity) print (\"Gravitational acceleration constant : \",grabity) print (\"Head loss : \",head_loss) print (\"Discharge : \",discharge) Pipe Diameter : 2.0 Pipe Length : 10560.0 Pipe Roughness Height : 8.5e-05 Liquid Viscosity : 1e-05 Gravitational acceleration constant : 32.2 Head loss : 40.0 Discharge : 19.8861362976099","title":"Test the tool"},{"location":"lesson4/lesson4/#refine-the-tool-for-generalization","text":"The refinement step would wrap the three parts above into a single function/notebook for simple use/reuse. If we save all three parts to a single file, we can access the script as we wish (using a JupyterLab magic function trick below. The run command is obvious, but the -i means run interactive, and we supply the script name) %run -i getQfromH.py Enter Pipe Diameter 2 Enter Pipe Length 10560 Enter Pipe Roughness Height 8.5e-5 Enter liquid viscosity 1e-5 Enter gravitational acceleration constant (unit system appropriate) 32.2 Enter head loss 40 Pipe Diameter : 2.0 Pipe Length : 10560.0 Pipe Roughness Height : 8.5e-05 Liquid Viscosity : 1e-05 Gravitational acceleration constant : 32.2 Head loss : 40.0 Discharge : 19.8861362976099 Lastly, we can put the script onto a server and access via a web interface.","title":"Refine the Tool for Generalization"}]}